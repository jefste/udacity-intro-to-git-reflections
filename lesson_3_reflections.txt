When would you want to use a remote repository rather than keeping all your work 
local?

It would be useful to have the work on a remote repository to be able to 
collaborate with others on a project as well as allow you work on different 
computers.

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

You would want to pull manually because someone might have modified the remote
repository that could break the code that you are currently working on.


Describe the differences between forks, clones, and branches. When would you 
use one instead of another?

Clone is a copy of a repo. A branch splits the code so that a new feature can 
be added from a previous position in the project without altering the master
code.  A fork is like a clone/branch of a project, but it is done on github.

What is the benefit of having a copy of the last known state of the remote stored 
locally?

If you have a local copy of the remote repo, you can compare your code to the 
most recent changes. This insures that whatever code you are trying to implement
will also work on any new code.

How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?

You could email a file back and forth, or use dropbox, or use Google Drive.
It would be much harder to track changes without Git or GitHub. You might be 
able to work faster if you didn't have to do all of the commands for adds, 
commits and pushes with Git and GitHub.

When would you want to make changes in a separate branch rather than directly in 
master? What benefits does each approach have?

If a new feature was being added to the code that fundamentally changed the 
way the existing code worked, it might be better to create a branch to keep
the code separate.  It would be easier to make the change in master, but 
you might want to keep the code working at a production quality in the
master branch. 
